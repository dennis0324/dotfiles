---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Gather the package facts...
      ansible.builtin.package_facts:
        manager: auto

    - name: Gathering services...
      service_facts:

    - name: Checking using bash
      shell:
        cmd: "echo $SHELL"
      register: current_shell

    - name: Check installed packages...
      set_fact:
        uninstalled_packages: "{{ uninstalled_packages | default([]) + [ item ]}}"
      when: "ansible_facts.packages[ item ] is undefined"
      loop:
        - git
        - kitty
        - htop
        - neovim
        - gcc
        - ripgrep
        - poetry
        - zsh
        - fzf
        - tmux
        - neofetch
        - xorg-server
        - xf86-video-vesa
        - i3
        - ly
        - picom
        - rofi

    - name: uninstalled packages
      debug:
        msg: "{{ uninstalled_packages }}"

    # - name: "Install packages..."
    #   ansible.builtin.pacman:
    #     name: "{{ item }}"
    #     state: present
    #   loop: "{{ uninstalled_packages }}"
    - name: check
      debug:
        msg: "{{ current_shell.stdout }}"

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh
      when: /usr/bin/zsh is match("/usr/bin/zsh")

    - name: Start ly Service
      systemd:
        name: ly
        state: "started"
        enabled: true
      when: ansible_facts.services['ly.service'] is defined and ansible_facts.services['ly.service'].state != 'running'
